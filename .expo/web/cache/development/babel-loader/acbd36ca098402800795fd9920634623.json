{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar moment = require('moment');\n\nvar CONFIG = require(\"../api_config/config.json\");\n\nvar WeekExpirationDisplay = function WeekExpirationDisplay() {\n  var _useState = useState(new Date().toLocaleString()),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeRN = _useState2[0],\n      setTimeRN = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      experation_date = _useState4[0],\n      setExperationDate = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      display_date = _useState6[0],\n      setDisplayDate = _useState6[1];\n\n  var fetchDate = function fetchDate() {\n    fetch(CONFIG.base_url + \"/api/vote_experation_date\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setExperationDate(json.date);\n      var days_until_experation_date = moment(Date.parse(json.date)).add(7, 'days').fromNow();\n      setDisplayDate(days_until_experation_date);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    fetchDate();\n  }, []);\n  return _jsx(View, {\n    style: styles.time_display,\n    children: _jsxs(Text, {\n      style: styles.experation_text,\n      children: [\" EXPERATION \", experation_date.length > 0 ? display_date : \"Connection Error\", \"  \"]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  time_display: {\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  experation_text: {\n    fontWeight: 'bold',\n    fontSize: 20\n  }\n});\nexport default WeekExpirationDisplay;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/components/WeekExpirationDisplay.js"],"names":["React","useEffect","useState","moment","require","CONFIG","WeekExpirationDisplay","Date","toLocaleString","timeRN","setTimeRN","experation_date","setExperationDate","display_date","setDisplayDate","fetchDate","fetch","base_url","then","response","json","date","days_until_experation_date","parse","add","fromNow","catch","error","console","styles","time_display","experation_text","length","StyleSheet","create","justifyContent","alignItems","fontWeight","fontSize"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AACA,IAAIC,MAAM,GAAGC,OAAO,CAAC,QAAD,CAApB;;AAGA,IAAMC,MAAM,GAAGD,OAAO,6BAAtB;;AAUA,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAEhC,kBAA4BJ,QAAQ,CAAC,IAAIK,IAAJ,GAAWC,cAAX,EAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA6CR,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,MAAOS,eAAP;AAAA,MAAwBC,iBAAxB;;AACA,mBAAuCV,QAAQ,CAAC,EAAD,CAA/C;AAAA;AAAA,MAAOW,YAAP;AAAA,MAAqBC,cAArB;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,IAAAA,KAAK,CAAIX,MAAM,CAACY,QAAX,+BAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACE,IAAD,EAAU;AACZR,MAAAA,iBAAiB,CAACQ,IAAI,CAACC,IAAN,CAAjB;AAEA,UAAIC,0BAA0B,GAAGnB,MAAM,CAACI,IAAI,CAACgB,KAAL,CAAWH,IAAI,CAACC,IAAhB,CAAD,CAAN,CAA8BG,GAA9B,CAAkC,CAAlC,EAAoC,MAApC,EAA4CC,OAA5C,EAAjC;AACAX,MAAAA,cAAc,CAACQ,0BAAD,CAAd;AAEH,KARL,EASKI,KATL,CASW,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KATX;AAUH,GAXD;;AAeA1B,EAAAA,SAAS,CAAC,YAAM;AACZc,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAQA,SAEI,KAAC,IAAD;AAAM,IAAA,KAAK,EAAEc,MAAM,CAACC,YAApB;AAAA,cACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA,iCAAkDpB,eAAe,CAACqB,MAAhB,GAAyB,CAAzB,GAA6BnB,YAA7B,GAA4C,kBAA9F;AAAA;AADJ,IAFJ;AAMH,CApCD;;AAuCA,IAAMgB,MAAM,GAAGI,UAAU,CAACC,MAAX,CACX;AACIJ,EAAAA,YAAY,EAAE;AACVK,IAAAA,cAAc,EAAE,QADN;AAEVC,IAAAA,UAAU,EAAE;AAFF,GADlB;AAKIL,EAAAA,eAAe,EAAE;AACbM,IAAAA,UAAU,EAAE,MADC;AAEbC,IAAAA,QAAQ,EAAE;AAFG;AALrB,CADW,CAAf;AAiBA,eAAehC,qBAAf","sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\nvar moment = require('moment');\r\n\r\n\r\nconst CONFIG = require(\"../api_config/config.json\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst WeekExpirationDisplay = () => {\r\n\r\n    const [timeRN, setTimeRN] = useState(new Date().toLocaleString())\r\n    const [experation_date, setExperationDate] = useState('')\r\n    const [display_date, setDisplayDate] = useState('')\r\n\r\n\r\n    const fetchDate = () => {\r\n        fetch(`${CONFIG.base_url}/api/vote_experation_date`)\r\n            .then((response) => response.json())\r\n            .then((json) => {\r\n                setExperationDate(json.date)\r\n\r\n                let days_until_experation_date = moment(Date.parse(json.date)).add(7,'days').fromNow()\r\n                setDisplayDate(days_until_experation_date)\r\n                \r\n            })\r\n            .catch((error) => console.error(error))\r\n    }\r\n\r\n\r\n    // on page render\r\n    useEffect(() => {\r\n        fetchDate();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={styles.time_display}>\r\n            <Text style={styles.experation_text}> EXPERATION {experation_date.length > 0 ? display_date : \"Connection Error\"}  </Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        time_display: {\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        experation_text: {\r\n            fontWeight: 'bold',\r\n            fontSize: 20\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\nexport default WeekExpirationDisplay"]},"metadata":{},"sourceType":"module"}