{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../api_config/firebase\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CONFIG = require(\"../api_config/config.json\");\n\nvar VoteCardScreen = function VoteCardScreen(_ref) {\n  var route = _ref.route;\n\n  var ticker_info = function ticker_info(ticker) {\n    var response, json;\n    return _regeneratorRuntime.async(function ticker_info$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(CONFIG.base_url + \"api/tickers/\" + ticker));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var voteCard_info = function voteCard_info(ticker) {\n    var response, json;\n    return _regeneratorRuntime.async(function voteCard_info$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(fetch(CONFIG.base_url + \"api/votes/\" + ticker));\n\n          case 2:\n            response = _context2.sent;\n            _context2.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var vote = function vote(ticker, opinion) {\n    var response, json;\n    return _regeneratorRuntime.async(function vote$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return _regeneratorRuntime.awrap(fetch(CONFIG.base_url + \"/api/votes/\" + ticker + \"/\" + opinion, {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user: auth.currentUser\n              })\n            }));\n\n          case 2:\n            response = _context3.sent;\n            _context3.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context3.sent;\n            return _context3.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [route.params.data.name, \" | \", route.params.data.ticker]\n    }), _jsxs(Text, {\n      children: [\"ETF? \", route.params.data.is_etf ? \"yes\" : \"no\"]\n    }), _jsx(Text, {\n      children: route.params.data.exchange\n    }), _jsxs(View, {\n      style: styles.fixToText,\n      children: [_jsx(Button, {\n        title: \"Left button\",\n        onPress: function onPress() {\n          return Alert.alert('Left button pressed');\n        },\n        style: styles.downButton\n      }), _jsx(Button, {\n        title: \"Right button\",\n        onPress: function onPress() {\n          return Alert.alert('Right button pressed');\n        },\n        style: styles.downButton\n      })]\n    }), _jsx(Button, {\n      title: \"Press me\",\n      disabled: true,\n      onPress: function onPress() {\n        return Alert.alert('Cannot press this one');\n      },\n      style: styles.downButton\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    backgroundColor: \"red\"\n  },\n  upButton: {\n    backgroundColor: \"green\"\n  },\n  downButton: {\n    backgroundColor: \"red\"\n  }\n});\nexport default VoteCardScreen;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/screens/VoteCardScreen.js"],"names":["React","useEffect","useState","auth","CONFIG","require","VoteCardScreen","route","ticker_info","ticker","fetch","base_url","response","json","voteCard_info","vote","opinion","method","headers","Accept","body","JSON","stringify","user","currentUser","styles","container","params","data","name","is_etf","exchange","fixToText","Alert","alert","downButton","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","backgroundColor","upButton"],"mappings":";;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AAIA,SAASC,IAAT;;;;AACA,IAAMC,MAAM,GAAGC,OAAO,6BAAtB;;AAMA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;;AAMlC,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACKC,KAAK,CACnBN,MAAM,CAACO,QADY,oBACWF,MADX,CADV;;AAAA;AACZG,YAAAA,QADY;AAAA;AAAA,6CAICA,QAAQ,CAACC,IAAT,EAJD;;AAAA;AAIZA,YAAAA,IAJY;AAAA,6CAKTA,IALS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAApB;;AAQA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAOL,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACGC,KAAK,CACnBN,MAAM,CAACO,QADY,kBACSF,MADT,CADR;;AAAA;AACdG,YAAAA,QADc;AAAA;AAAA,6CAIDA,QAAQ,CAACC,IAAT,EAJC;;AAAA;AAIdA,YAAAA,IAJc;AAAA,8CAKXA,IALW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAtB;;AAWA,MAAME,IAAI,GAAG,SAAPA,IAAO,CAAON,MAAP,EAAeO,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACYN,KAAK,CAAIN,MAAM,CAACO,QAAX,mBAAiCF,MAAjC,SAA2CO,OAA3C,EAAsD;AAC5EC,cAAAA,MAAM,EAAE,MADoE;AAE5EC,cAAAA,OAAO,EAAE;AAAEC,gBAAAA,MAAM,EAAE,kBAAV;AAA8B,gCAAgB;AAA9C,eAFmE;AAG5EC,cAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,gBAAAA,IAAI,EAAEpB,IAAI,CAACqB;AAAb,eAAf;AAHsE,aAAtD,CADjB;;AAAA;AACLZ,YAAAA,QADK;AAAA;AAAA,6CAOQA,QAAQ,CAACC,IAAT,EAPR;;AAAA;AAOLA,YAAAA,IAPK;AAAA,8CAQFA,IARE;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAb;;AAqBA,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,SAApB;AAAA,eAEI,MAAC,IAAD;AAAA,iBAAOnB,KAAK,CAACoB,MAAN,CAAaC,IAAb,CAAkBC,IAAzB,SAAkCtB,KAAK,CAACoB,MAAN,CAAaC,IAAb,CAAkBnB,MAApD;AAAA,MAFJ,EAGI,MAAC,IAAD;AAAA,0BAAYF,KAAK,CAACoB,MAAN,CAAaC,IAAb,CAAkBE,MAAlB,GAA2B,KAA3B,GAAmC,IAA/C;AAAA,MAHJ,EAII,KAAC,IAAD;AAAA,gBAAOvB,KAAK,CAACoB,MAAN,CAAaC,IAAb,CAAkBG;AAAzB,MAJJ,EAMI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEN,MAAM,CAACO,SAApB;AAAA,iBACI,KAAC,MAAD;AACI,QAAA,KAAK,EAAC,aADV;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMC,KAAK,CAACC,KAAN,CAAY,qBAAZ,CAAN;AAAA,SAFb;AAGI,QAAA,KAAK,EAAET,MAAM,CAACU;AAHlB,QADJ,EAMI,KAAC,MAAD;AACI,QAAA,KAAK,EAAC,cADV;AAEI,QAAA,OAAO,EAAE;AAAA,iBAAMF,KAAK,CAACC,KAAN,CAAY,sBAAZ,CAAN;AAAA,SAFb;AAGI,QAAA,KAAK,EAAET,MAAM,CAACU;AAHlB,QANJ;AAAA,MANJ,EAkBI,KAAC,MAAD;AACI,MAAA,KAAK,EAAC,UADV;AAEI,MAAA,QAAQ,MAFZ;AAGI,MAAA,OAAO,EAAE;AAAA,eAAMF,KAAK,CAACC,KAAN,CAAY,uBAAZ,CAAN;AAAA,OAHb;AAII,MAAA,KAAK,EAAET,MAAM,CAACU;AAJlB,MAlBJ;AAAA,IADJ;AA6BH,CA3ED;;AAkFA,IAAMV,MAAM,GAAGW,UAAU,CAACC,MAAX,CACX;AACIX,EAAAA,SAAS,EAAE;AACPY,IAAAA,IAAI,EAAE,CADC;AAEPC,IAAAA,cAAc,EAAE,QAFT;AAGPC,IAAAA,UAAU,EAAE;AAHL,GADf;AAMIR,EAAAA,SAAS,EAAE;AACPS,IAAAA,aAAa,EAAE,KADR;AAEPF,IAAAA,cAAc,EAAE,eAFT;AAGPG,IAAAA,eAAe,EAAE;AAHV,GANf;AAWIC,EAAAA,QAAQ,EAAE;AACND,IAAAA,eAAe,EAAE;AADX,GAXd;AAcIP,EAAAA,UAAU,EAAE;AACRO,IAAAA,eAAe,EAAE;AADT;AAdhB,CADW,CAAf;AA0BA,eAAepC,cAAf","sourcesContent":["import { StyleSheet, Text, View, Button } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\n// config\r\nimport { auth } from \"../api_config/firebase\";\r\nconst CONFIG = require(\"../api_config/config.json\")\r\n\r\n\r\n\r\n\r\n\r\nconst VoteCardScreen = ({ route }) => {\r\n\r\n\r\n\r\n\r\n    // DISPLAY_INFO FETCH DATA\r\n    const ticker_info = async (ticker) => {\r\n        let response = await fetch(\r\n            `${CONFIG.base_url}api/tickers/${ticker}`\r\n        );\r\n        let json = await response.json();\r\n        return json;\r\n    }\r\n\r\n    const voteCard_info = async (ticker) => {\r\n        let response = await fetch(\r\n            `${CONFIG.base_url}api/votes/${ticker}`\r\n        );\r\n        let json = await response.json();\r\n        return json;\r\n    }\r\n\r\n\r\n\r\n    // POST VOTES\r\n    const vote = async (ticker, opinion) => {\r\n        let response = await fetch(`${CONFIG.base_url}/api/votes/${ticker}/${opinion}`, {\r\n            method: 'POST',\r\n            headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ user: auth.currentUser }),\r\n        });\r\n\r\n        let json = await response.json();\r\n        return json;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n            <Text>{route.params.data.name} | {route.params.data.ticker}</Text>\r\n            <Text>ETF? {route.params.data.is_etf ? \"yes\" : \"no\"}</Text>\r\n            <Text>{route.params.data.exchange}</Text>\r\n\r\n            <View style={styles.fixToText}>\r\n                <Button\r\n                    title=\"Left button\"\r\n                    onPress={() => Alert.alert('Left button pressed')}\r\n                    style={styles.downButton}\r\n                    />\r\n                <Button\r\n                    title=\"Right button\"\r\n                    onPress={() => Alert.alert('Right button pressed')}\r\n                    style={styles.downButton}\r\n                />\r\n            </View>\r\n            <Button\r\n                title=\"Press me\"\r\n                disabled\r\n                onPress={() => Alert.alert('Cannot press this one')}\r\n                style={styles.downButton}\r\n            />\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        fixToText: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n            backgroundColor: \"red\"\r\n        },\r\n        upButton: {\r\n            backgroundColor: \"green\"\r\n        },\r\n        downButton: {\r\n            backgroundColor: \"red\"\r\n        },\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default VoteCardScreen\r\n"]},"metadata":{},"sourceType":"module"}