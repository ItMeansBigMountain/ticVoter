{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar arr = [];\n\nfor (var i = 1; i < 300; i++) {\n  arr.push(\"Item no: \" + i);\n}\n\nvar lastItem = '';\n\nvar fetch_rendered_data = function fetch_rendered_data(qty) {\n  return _regeneratorRuntime.async(function fetch_rendered_data$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          return _context.abrupt(\"return\", new Promise(function (resolve, reject) {\n            var newArr;\n            var lastItemIndex = arr.indexOf(lastItem);\n            if (lastItemIndex === arr.length - 1) return resolve('done');\n\n            if (!lastItem) {\n              newArr = [].concat(arr).slice(0, qty);\n              lastItem = _toConsumableArray(newArr).pop();\n            } else {\n              var newIndex = arr.indexOf(lastItem) + 1;\n              newArr = [].concat(arr).slice(newIndex, qty + newIndex);\n              lastItem = _toConsumableArray(newArr).pop();\n            }\n\n            setTimeout(function () {\n              resolve(newArr);\n            }, 1000);\n          }));\n\n        case 1:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default fetch_rendered_data;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/DataServer.js"],"names":["arr","i","push","lastItem","fetch_rendered_data","qty","Promise","resolve","reject","newArr","lastItemIndex","indexOf","length","slice","pop","newIndex","setTimeout"],"mappings":";;AAAA,IAAIA,GAAG,GAAG,EAAV;;AACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,GAApB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5BD,EAAAA,GAAG,CAACE,IAAJ,eAAqBD,CAArB;AACD;;AAED,IAAIE,QAAQ,GAAG,EAAf;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAOC,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA,2CAC1B,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B,gBAAIC,MAAJ;AACA,gBAAMC,aAAa,GAAGV,GAAG,CAACW,OAAJ,CAAYR,QAAZ,CAAtB;AACA,gBAAIO,aAAa,KAAKV,GAAG,CAACY,MAAJ,GAAa,CAAnC,EAAsC,OAAOL,OAAO,CAAC,MAAD,CAAd;;AAEtC,gBAAI,CAACJ,QAAL,EAAe;AACbM,cAAAA,MAAM,GAAG,UAAIT,GAAJ,EAASa,KAAT,CAAe,CAAf,EAAkBR,GAAlB,CAAT;AACAF,cAAAA,QAAQ,GAAG,mBAAIM,MAAJ,EAAYK,GAAZ,EAAX;AACD,aAHD,MAGO;AACL,kBAAMC,QAAQ,GAAGf,GAAG,CAACW,OAAJ,CAAYR,QAAZ,IAAwB,CAAzC;AACAM,cAAAA,MAAM,GAAG,UAAIT,GAAJ,EAASa,KAAT,CAAeE,QAAf,EAAyBV,GAAG,GAAGU,QAA/B,CAAT;AACAZ,cAAAA,QAAQ,GAAG,mBAAIM,MAAJ,EAAYK,GAAZ,EAAX;AACD;;AACDE,YAAAA,UAAU,CAAC,YAAM;AACfT,cAAAA,OAAO,CAACE,MAAD,CAAP;AACD,aAFS,EAEP,IAFO,CAAV;AAGD,WAhBD,CAD0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;;AAsBA,eAAeL,mBAAf","sourcesContent":["let arr = [];\r\nfor (let i = 1; i < 300; i++) {\r\n  arr.push(`Item no: ${i}`);\r\n}\r\n\r\nlet lastItem = '';\r\n\r\nconst fetch_rendered_data = async  qty =>\r\n  new Promise((resolve, reject) => {\r\n    let newArr;\r\n    const lastItemIndex = arr.indexOf(lastItem);\r\n    if (lastItemIndex === arr.length - 1) return resolve('done');\r\n\r\n    if (!lastItem) {\r\n      newArr = [...arr].slice(0, qty);\r\n      lastItem = [...newArr].pop();\r\n    } else {\r\n      const newIndex = arr.indexOf(lastItem) + 1;\r\n      newArr = [...arr].slice(newIndex, qty + newIndex);\r\n      lastItem = [...newArr].pop();\r\n    }\r\n    setTimeout(() => {\r\n      resolve(newArr);\r\n    }, 1000);\r\n  });\r\n\r\n\r\n\r\n\r\nexport default fetch_rendered_data"]},"metadata":{},"sourceType":"module"}