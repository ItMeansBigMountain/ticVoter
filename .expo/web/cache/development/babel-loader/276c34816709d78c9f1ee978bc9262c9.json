{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CONFIG = require(\"../api_config/config.json\");\n\nvar WeekExpirationDisplay = function WeekExpirationDisplay() {\n  var _useState = useState(new Date().toLocaleString()),\n      _useState2 = _slicedToArray(_useState, 2),\n      timeRN = _useState2[0],\n      setTimeRN = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      experation_date = _useState4[0],\n      setExperationDate = _useState4[1];\n\n  var fetchDate = function fetchDate() {\n    fetch(CONFIG.base_url + \"/api/vote_experation_date\").then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      setExperationDate(json.data);\n    }).then(function () {\n      var date_obj = experation_date.split(\"T\");\n      setExperationDate(date_obj[0]);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  useEffect(function () {\n    fetchDate();\n  }, []);\n  return _jsxs(View, {\n    style: styles.time_display,\n    children: [_jsx(Text, {\n      style: styles.experation_text,\n      children: \" EXPERATION DATE \"\n    }), _jsxs(Text, {\n      style: styles.experation_text,\n      children: [\" \", experation_date.length > 0 ? experation_date : \"Connection Error\", \"  \"]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  time_display: {\n    marginTop: \"50%\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  experation_text: {\n    fontWeight: 'bold',\n    fontSize: 25\n  }\n});\nexport default WeekExpirationDisplay;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/components/WeekExpirationDisplay.js"],"names":["React","useEffect","useState","CONFIG","require","WeekExpirationDisplay","Date","toLocaleString","timeRN","setTimeRN","experation_date","setExperationDate","fetchDate","fetch","base_url","then","response","json","data","date_obj","split","catch","error","console","styles","time_display","experation_text","length","StyleSheet","create","marginTop","justifyContent","alignItems","fontWeight","fontSize"],"mappings":";;;;;;AACA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,IAAMC,MAAM,GAAGC,OAAO,6BAAtB;;AAUA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAEhC,kBAA4BH,QAAQ,CAAC,IAAII,IAAJ,GAAWC,cAAX,EAAD,CAApC;AAAA;AAAA,MAAOC,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAA6CP,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,MAAOQ,eAAP;AAAA,MAAwBC,iBAAxB;;AAGA,MAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,IAAAA,KAAK,CAAIV,MAAM,CAACW,QAAX,+BAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,aAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,KADV,EAEKF,IAFL,CAEU,UAACE,IAAD,EAAU;AAAEN,MAAAA,iBAAiB,CAACM,IAAI,CAACC,IAAN,CAAjB;AAA8B,KAFpD,EAGKH,IAHL,CAGU,YAAM;AAER,UAAII,QAAQ,GAAGT,eAAe,CAACU,KAAhB,CAAsB,GAAtB,CAAf;AACAT,MAAAA,iBAAiB,CAACQ,QAAQ,CAAC,CAAD,CAAT,CAAjB;AACH,KAPL,EAQKE,KARL,CAQW,UAACC,KAAD;AAAA,aAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,KARX;AASH,GAVD;;AAcArB,EAAAA,SAAS,CAAC,YAAM;AACZW,IAAAA,SAAS;AACZ,GAFQ,EAEN,EAFM,CAAT;AAQA,SAEI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEY,MAAM,CAACC,YAApB;AAAA,eACI,KAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,eAApB;AAAA;AAAA,MADJ,EAEI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,CAACE,eAApB;AAAA,sBAAuChB,eAAe,CAACiB,MAAhB,GAAyB,CAAzB,GAA6BjB,eAA7B,GAA+C,kBAAtF;AAAA,MAFJ;AAAA,IAFJ;AAOH,CAnCD;;AAsCA,IAAMc,MAAM,GAAGI,UAAU,CAACC,MAAX,CACX;AACIJ,EAAAA,YAAY,EAAE;AACVK,IAAAA,SAAS,EAAE,KADD;AAEVC,IAAAA,cAAc,EAAE,QAFN;AAGVC,IAAAA,UAAU,EAAE;AAHF,GADlB;AAMIN,EAAAA,eAAe,EAAE;AACbO,IAAAA,UAAU,EAAE,MADC;AAEbC,IAAAA,QAAQ,EAAE;AAFG;AANrB,CADW,CAAf;AAkBA,eAAe7B,qBAAf","sourcesContent":["import { StyleSheet, Text, TouchableOpacity, View, ScrollView } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nconst CONFIG = require(\"../api_config/config.json\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst WeekExpirationDisplay = () => {\r\n\r\n    const [timeRN, setTimeRN] = useState(new Date().toLocaleString())\r\n    const [experation_date, setExperationDate] = useState('')\r\n\r\n\r\n    const fetchDate = () => {\r\n        fetch(`${CONFIG.base_url}/api/vote_experation_date`)\r\n            .then((response) => response.json())\r\n            .then((json) => { setExperationDate(json.data) })\r\n            .then(() => {\r\n                // format date\r\n                let date_obj = experation_date.split(\"T\")\r\n                setExperationDate(date_obj[0])\r\n            })\r\n            .catch((error) => console.error(error))\r\n    }\r\n\r\n\r\n    // on page render\r\n    useEffect(() => {\r\n        fetchDate();\r\n    }, []);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <View style={styles.time_display}>\r\n            <Text style={styles.experation_text}> EXPERATION DATE </Text>\r\n            <Text style={styles.experation_text}> {experation_date.length > 0 ? experation_date : \"Connection Error\"}  </Text>\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        time_display: {\r\n            marginTop: \"50%\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        experation_text: {\r\n            fontWeight: 'bold',\r\n            fontSize: 25\r\n        }\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\nexport default WeekExpirationDisplay"]},"metadata":{},"sourceType":"module"}