{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { SearchBar } from 'react-native-elements';\nimport { fetch_rendered_data, fetch_stocks } from \"../DataServer\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar SearchComponent = function SearchComponent(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  var load_filter = function load_filter() {\n    fetch_stocks();\n    setMasterDataSource();\n  };\n\n  useEffect(function () {\n    load_filter();\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = masterDataSource.filter(function (item) {\n        var itemData = item.title ? item.title.toUpperCase() : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsxs(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      children: [item.id, '.', item.title.toUpperCase()]\n    });\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8'\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return _jsx(SafeAreaView, {\n    style: {\n      flex: 1\n    },\n    children: _jsxs(View, {\n      style: styles.container,\n      children: [_jsx(SearchBar, {\n        round: true,\n        searchIcon: {\n          size: 24\n        },\n        onChangeText: function onChangeText(text) {\n          return searchFilterFunction(text);\n        },\n        onClear: function onClear(text) {\n          return searchFilterFunction('');\n        },\n        placeholder: \"Type Here...\",\n        value: search\n      }), _jsx(FlatList, {\n        data: filteredDataSource,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        ItemSeparatorComponent: ItemSeparatorView,\n        renderItem: ItemView\n      })]\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  }\n});\nexport default SearchComponent;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/components/SearchComponent.js"],"names":["React","useState","useEffect","SearchBar","fetch_rendered_data","fetch_stocks","SearchComponent","props","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","load_filter","searchFilterFunction","text","newData","filter","item","itemData","title","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","ItemSeparatorView","height","width","backgroundColor","alert","flex","container","size","index","toString","StyleSheet","create","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { SafeAreaView, Text, StyleSheet, View, FlatList } from 'react-native';\r\nimport { SearchBar } from 'react-native-elements';\r\nimport { fetch_rendered_data , fetch_stocks } from '../DataServer';\r\n\r\n\r\n\r\nconst SearchComponent = (props) => {\r\n    const [search, setSearch] = useState('');\r\n    const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n    const [masterDataSource, setMasterDataSource] = useState([]);\r\n\r\n    const load_filter = () => {\r\n        fetch_stocks()\r\n        \r\n        setMasterDataSource(  )  \r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        \r\n        load_filter()\r\n    }, []);\r\n\r\n    const searchFilterFunction = (text) => {\r\n        // Check if searched text is not blank\r\n        if (text) {\r\n            // Filter data\r\n            // Update\r\n            const newData = masterDataSource.filter(function (item) {\r\n                const itemData = item.title\r\n                    ? item.title.toUpperCase()\r\n                    : ''.toUpperCase();\r\n                const textData = text.toUpperCase();\r\n                return itemData.indexOf(textData) > -1;\r\n            });\r\n            setFilteredDataSource(newData);\r\n            setSearch(text);\r\n        } else {\r\n            // Inserted text is blank\r\n            // Update FilteredDataSource with masterDataSource\r\n            setFilteredDataSource(masterDataSource);\r\n            setSearch(text);\r\n        }\r\n    };\r\n\r\n    const ItemView = ({ item }) => {\r\n        return (\r\n            // Flat List Item\r\n            <Text style={styles.itemStyle} onPress={() => getItem(item)}>\r\n                {item.id}\r\n                {'.'}\r\n                {item.title.toUpperCase()}\r\n            </Text>\r\n        );\r\n    };\r\n\r\n    const ItemSeparatorView = () => {\r\n        return (\r\n            // Flat List Item Separator\r\n            <View\r\n                style={{\r\n                    height: 0.5,\r\n                    width: '100%',\r\n                    backgroundColor: '#C8C8C8',\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const getItem = (item) => {\r\n        // Function for click on an item\r\n        alert('Id : ' + item.id + ' Title : ' + item.title);\r\n    };\r\n\r\n    return (\r\n        <SafeAreaView style={{ flex: 1 }}>\r\n            <View style={styles.container}>\r\n                <SearchBar\r\n                    round\r\n                    searchIcon={{ size: 24 }}\r\n                    onChangeText={(text) => searchFilterFunction(text)}\r\n                    onClear={(text) => searchFilterFunction('')}\r\n                    placeholder=\"Type Here...\"\r\n                    value={search}\r\n                />\r\n                <FlatList\r\n                    data={filteredDataSource}\r\n                    keyExtractor={(item, index) => index.toString()}\r\n                    ItemSeparatorComponent={ItemSeparatorView}\r\n                    renderItem={ItemView}\r\n                />\r\n            </View>\r\n        </SafeAreaView>\r\n    );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        backgroundColor: 'white',\r\n    },\r\n    itemStyle: {\r\n        padding: 10,\r\n    },\r\n});\r\n\r\nexport default SearchComponent;\r\n"]},"metadata":{},"sourceType":"module"}