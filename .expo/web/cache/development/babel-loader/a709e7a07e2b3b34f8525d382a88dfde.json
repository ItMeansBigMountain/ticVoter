{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar App = function App() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filteredDataSource = _useState4[0],\n      setFilteredDataSource = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      masterDataSource = _useState6[0],\n      setMasterDataSource = _useState6[1];\n\n  useEffect(function () {\n    fetch('https://jsonplaceholder.typicode.com/posts').then(function (response) {\n      return response.json();\n    }).then(function (responseJson) {\n      setFilteredDataSource(responseJson);\n      setMasterDataSource(responseJson);\n    }).catch(function (error) {\n      console.error(error);\n    });\n  }, []);\n\n  var searchFilterFunction = function searchFilterFunction(text) {\n    if (text) {\n      var newData = data.filter(function (item) {\n        var itemData = item.ticker ? item.ticker : ''.toUpperCase();\n        var textData = text.toUpperCase();\n        return itemData.indexOf(textData) > -1;\n      });\n      setFilteredDataSource(newData);\n      setSearch(text);\n    } else {\n      setFilteredDataSource(masterDataSource);\n      setSearch(text);\n    }\n  };\n\n  var ItemView = function ItemView(_ref) {\n    var item = _ref.item;\n    return _jsxs(Text, {\n      style: styles.itemStyle,\n      onPress: function onPress() {\n        return getItem(item);\n      },\n      children: [item.id, '.', item.title.toUpperCase()]\n    });\n  };\n\n  var ItemSeparatorView = function ItemSeparatorView() {\n    return _jsx(View, {\n      style: {\n        height: 0.5,\n        width: '100%',\n        backgroundColor: '#C8C8C8'\n      }\n    });\n  };\n\n  var getItem = function getItem(item) {\n    alert('Id : ' + item.id + ' Title : ' + item.title);\n  };\n\n  return _jsx(SafeAreaView, {\n    children: _jsx(View, {\n      style: styles.container,\n      children: _jsx(TextInput, {\n        style: styles.textInputStyle,\n        onChangeText: function onChangeText(text) {\n          return searchFilterFunction(text);\n        },\n        value: search,\n        underlineColorAndroid: \"transparent\",\n        placeholder: \"Search Here\"\n      })\n    })\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white'\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 40,\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 5,\n    borderColor: '#009688',\n    backgroundColor: '#FFFFFF'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/components/SearchComponent.js"],"names":["React","useState","useEffect","App","search","setSearch","filteredDataSource","setFilteredDataSource","masterDataSource","setMasterDataSource","fetch","then","response","json","responseJson","catch","error","console","searchFilterFunction","text","newData","data","filter","item","itemData","ticker","toUpperCase","textData","indexOf","ItemView","styles","itemStyle","getItem","id","title","ItemSeparatorView","height","width","backgroundColor","alert","container","textInputStyle","StyleSheet","create","padding","borderWidth","paddingLeft","margin","borderColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nimport {\r\n  SafeAreaView,\r\n  Text,\r\n  StyleSheet,\r\n  View,\r\n  FlatList,\r\n  TextInput,\r\n} from 'react-native';\r\n\r\nconst App = () => {\r\n  const [search, setSearch] = useState('');\r\n  const [filteredDataSource, setFilteredDataSource] = useState([]);\r\n  const [masterDataSource, setMasterDataSource] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('https://jsonplaceholder.typicode.com/posts')\r\n      .then((response) => response.json())\r\n      .then((responseJson) => {\r\n        setFilteredDataSource(responseJson);\r\n        setMasterDataSource(responseJson);\r\n      })\r\n      .catch((error) => {\r\n        console.error(error);\r\n      });\r\n  }, []);\r\n\r\n  const searchFilterFunction = (text) => {\r\n    // Check if searched text is not blank\r\n    if (text) {\r\n      // Inserted text is not blank\r\n      // Filter the masterDataSource and update FilteredDataSource\r\n      const newData = data.filter(function (item) {\r\n        // Applying filter for the inserted text in search bar\r\n        const itemData = item.ticker\r\n          ? item.ticker \r\n          : ''.toUpperCase();\r\n        const textData = text.toUpperCase();\r\n        return itemData.indexOf(textData) > -1;\r\n      });\r\n      setFilteredDataSource(newData);\r\n      setSearch(text);\r\n    } else {\r\n      // Inserted text is blank\r\n      // Update FilteredDataSource with masterDataSource\r\n      setFilteredDataSource(masterDataSource);\r\n      setSearch(text);\r\n    }\r\n  };\r\n\r\n  const ItemView = ({ item }) => {\r\n    return (\r\n      // Flat List Item\r\n      <Text style={styles.itemStyle} onPress={() => getItem(item)}>\r\n        {item.id}\r\n        {'.'}\r\n        {item.title.toUpperCase()}\r\n      </Text>\r\n    );\r\n  };\r\n\r\n  const ItemSeparatorView = () => {\r\n    return (\r\n      // Flat List Item Separator\r\n      <View\r\n        style={{\r\n          height: 0.5,\r\n          width: '100%',\r\n          backgroundColor: '#C8C8C8',\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  const getItem = (item) => {\r\n    // Function for click on an item\r\n    alert('Id : ' + item.id + ' Title : ' + item.title);\r\n  };\r\n\r\n  return (\r\n    <SafeAreaView  >\r\n      <View style={styles.container}>\r\n        <TextInput\r\n          style={styles.textInputStyle}\r\n          onChangeText={(text) => searchFilterFunction(text)}\r\n          value={search}\r\n          underlineColorAndroid=\"transparent\"\r\n          placeholder=\"Search Here\"\r\n        />\r\n        {/* <FlatList\r\n          data={filteredDataSource}\r\n          keyExtractor={(item, index) => index.toString()}\r\n          ItemSeparatorComponent={ItemSeparatorView}\r\n          renderItem={ItemView}\r\n        /> */}\r\n      </View>\r\n    </SafeAreaView>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n  },\r\n  itemStyle: {\r\n    padding: 10,\r\n  },\r\n  textInputStyle: {\r\n    height: 40,\r\n    borderWidth: 1,\r\n    paddingLeft: 20,\r\n    margin: 5,\r\n    borderColor: '#009688',\r\n    backgroundColor: '#FFFFFF',\r\n  },\r\n});\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}