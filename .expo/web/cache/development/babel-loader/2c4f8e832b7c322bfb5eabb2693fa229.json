{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useNavigation } from '@react-navigation/core';\nimport React, { useEffect, useState } from 'react';\nimport KeyboardAvoidingView from \"react-native-web/dist/exports/KeyboardAvoidingView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { auth } from \"../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar LoginScreen = function LoginScreen() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      password = _useState4[0],\n      setPassword = _useState4[1];\n\n  var navigation = useNavigation();\n  useEffect(function () {\n    var unsubscribe = auth.onAuthStateChanged(function (user) {\n      if (user) navigation.replace(\"Home\");\n    });\n    return unsubscribe;\n  }, []);\n\n  var handleSignUp = function handleSignUp() {\n    auth.createUserWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email, \"Registered!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var handleLogin = function handleLogin() {\n    auth.signInWithEmailAndPassword(email, password).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user.email, \"logged in!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var handleGuestLogin = function handleGuestLogin() {\n    auth.signInAnonymously().then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user == null ? void 0 : user.displayName, \"logged in!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  var handleDeviceLogin = function handleDeviceLogin() {\n    var token = \"testing_token\";\n    auth.signInWithCustomToken(token).then(function (userCredentials) {\n      var user = userCredentials.user;\n      console.log(user == null ? void 0 : user.displayName, \"logged in!\");\n    }).catch(function (error) {\n      alert(error.message);\n    });\n  };\n\n  return _jsxs(KeyboardAvoidingView, {\n    style: styles.container,\n    behavior: \"padding\",\n    children: [_jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        placeholder: \"Email\",\n        value: email,\n        onChangeText: function onChangeText(text) {\n          setEmail(text);\n        },\n        style: styles.input\n      }), _jsx(TextInput, {\n        placeholder: \"Password\",\n        value: password,\n        onChangeText: function onChangeText(text) {\n          setPassword(text);\n        },\n        style: styles.input,\n        secureTextEntry: true\n      })]\n    }), _jsxs(View, {\n      style: styles.buttonContainer,\n      children: [_jsx(TouchableOpacity, {\n        onPress: handleLogin,\n        style: styles.button,\n        children: _jsx(Text, {\n          style: styles.buttonText,\n          children: \" Login \"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleSignUp,\n        style: [styles.button, styles.buttonOutline],\n        children: _jsx(Text, {\n          style: styles.buttonOutlineText,\n          children: \" Register \"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleGuestLogin,\n        style: [styles.button, styles.GuestbuttonOutline],\n        children: _jsx(Text, {\n          style: styles.GuestbuttonOutlineText,\n          children: \" Guest! \"\n        })\n      }), _jsx(TouchableOpacity, {\n        onPress: handleDeviceLogin,\n        style: [styles.button, styles.GuestbuttonOutline],\n        children: _jsx(Text, {\n          style: styles.GuestbuttonOutlineText,\n          children: \" Device Login! \"\n        })\n      })]\n    })]\n  });\n};\n\nexport default LoginScreen;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  inputContainer: {\n    width: \"80%\"\n  },\n  input: {\n    backgroundColor: \"white\",\n    paddingHorizontal: 15,\n    paddingVertical: 10,\n    borderRadius: 10,\n    marginTop: 5\n  },\n  buttonContainer: {\n    width: \"60%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 40\n  },\n  button: {\n    backgroundColor: \"#0782F9\",\n    width: \"100%\",\n    padding: 15,\n    borderRadius: 10,\n    alignItems: \"center\"\n  },\n  buttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#0782F9\",\n    borderWidth: 2\n  },\n  buttonText: {\n    color: \"white\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  buttonOutlineText: {\n    color: \"#0782F9\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  GuestbuttonOutlineText: {\n    color: \"#00FF00\",\n    fontWeight: \"700\",\n    fontSize: 16\n  },\n  GuestbuttonOutline: {\n    backgroundColor: \"white\",\n    marginTop: 5,\n    borderColor: \"#00FF00\",\n    borderWidth: 2\n  }\n});","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/screens/LoginScreen.js"],"names":["useNavigation","React","useEffect","useState","auth","LoginScreen","email","setEmail","password","setPassword","navigation","unsubscribe","onAuthStateChanged","user","replace","handleSignUp","createUserWithEmailAndPassword","then","userCredentials","console","log","catch","error","alert","message","handleLogin","signInWithEmailAndPassword","handleGuestLogin","signInAnonymously","displayName","handleDeviceLogin","token","signInWithCustomToken","styles","container","inputContainer","text","input","buttonContainer","button","buttonText","buttonOutline","buttonOutlineText","GuestbuttonOutline","GuestbuttonOutlineText","StyleSheet","create","flex","justifyContent","alignItems","width","backgroundColor","paddingHorizontal","paddingVertical","borderRadius","marginTop","padding","borderColor","borderWidth","color","fontWeight","fontSize"],"mappings":";AACA,SAASA,aAAT,QAA8B,wBAA9B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;;;AAUA,SAASC,IAAT;;;;AAKA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AAExB,kBAA0BF,QAAQ,CAAC,EAAD,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AACA,mBAAgCJ,QAAQ,CAAC,EAAD,CAAxC;AAAA;AAAA,MAAOK,QAAP;AAAA,MAAiBC,WAAjB;;AAGA,MAAMC,UAAU,GAAGV,aAAa,EAAhC;AAGAE,EAAAA,SAAS,CACP,YAAM;AACJ,QAAMS,WAAW,GAAGP,IAAI,CAACQ,kBAAL,CAClB,UAAAC,IAAI,EAAI;AACN,UAAIA,IAAJ,EAAUH,UAAU,CAACI,OAAX,CAAmB,MAAnB;AACX,KAHiB,CAApB;AAKA,WAAOH,WAAP;AACD,GARM,EAQJ,EARI,CAAT;;AAcA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBX,IAAAA,IAAI,CACDY,8BADH,CACkCV,KADlC,EACyCE,QADzC,EAEGS,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACP,KAAjB,EAAwB,aAAxB;AACD,KALH,EAMGe,KANH,CAMS,UAAAC,KAAK,EAAI;AAAEC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AAAsB,KAN1C;AAQD,GATD;;AAYA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBrB,IAAAA,IAAI,CACDsB,0BADH,CAC8BpB,KAD9B,EACqCE,QADrC,EAEGS,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACP,KAAjB,EAAwB,YAAxB;AACD,KALH,EAMGe,KANH,CAMS,UAAAC,KAAK,EAAI;AAAEC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AAAsB,KAN1C;AAQD,GATD;;AAYA,MAAMG,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BvB,IAAAA,IAAI,CACDwB,iBADH,GAEGX,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,oBAAYA,IAAI,CAAEgB,WAAlB,EAA+B,YAA/B;AACD,KALH,EAMGR,KANH,CAMS,UAAAC,KAAK,EAAI;AAAEC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AAAsB,KAN1C;AAOD,GARD;;AAWA,MAAMM,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9B,QAAIC,KAAK,GAAG,eAAZ;AACA3B,IAAAA,IAAI,CACD4B,qBADH,CACyBD,KADzB,EAEGd,IAFH,CAEQ,UAAAC,eAAe,EAAI;AACvB,UAAML,IAAI,GAAGK,eAAe,CAACL,IAA7B;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYP,IAAZ,oBAAYA,IAAI,CAAEgB,WAAlB,EAAiC,YAAjC;AACD,KALH,EAMGR,KANH,CAMS,UAAAC,KAAK,EAAI;AAAEC,MAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AAAsB,KAN1C;AAOD,GATD;;AAYA,SACE,MAAC,oBAAD;AACE,IAAA,KAAK,EAAES,MAAM,CAACC,SADhB;AAEE,IAAA,QAAQ,EAAC,SAFX;AAAA,eAME,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,cAApB;AAAA,iBAGE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,OADd;AAEE,QAAA,KAAK,EAAE7B,KAFT;AAGE,QAAA,YAAY,EAAE,sBAAA8B,IAAI,EAAI;AAAE7B,UAAAA,QAAQ,CAAC6B,IAAD,CAAR;AAAgB,SAH1C;AAIE,QAAA,KAAK,EAAEH,MAAM,CAACI;AAJhB,QAHF,EAWE,KAAC,SAAD;AACE,QAAA,WAAW,EAAC,UADd;AAEE,QAAA,KAAK,EAAE7B,QAFT;AAGE,QAAA,YAAY,EAAE,sBAAA4B,IAAI,EAAI;AAAE3B,UAAAA,WAAW,CAAC2B,IAAD,CAAX;AAAmB,SAH7C;AAIE,QAAA,KAAK,EAAEH,MAAM,CAACI,KAJhB;AAKE,QAAA,eAAe;AALjB,QAXF;AAAA,MANF,EA2BE,MAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,CAACK,eAApB;AAAA,iBAGE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEb,WAA3B;AAAwC,QAAA,KAAK,EAAEQ,MAAM,CAACM,MAAtD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEN,MAAM,CAACO,UAApB;AAAA;AAAA;AADF,QAHF,EASE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEzB,YAA3B;AAAyC,QAAA,KAAK,EAAE,CAACkB,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACQ,aAAvB,CAAhD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAER,MAAM,CAACS,iBAApB;AAAA;AAAA;AADF,QATF,EAcE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEf,gBAA3B;AAA6C,QAAA,KAAK,EAAE,CAACM,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACU,kBAAvB,CAApD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACW,sBAApB;AAAA;AAAA;AADF,QAdF,EAmBE,KAAC,gBAAD;AAAkB,QAAA,OAAO,EAAEd,iBAA3B;AAA8C,QAAA,KAAK,EAAE,CAACG,MAAM,CAACM,MAAR,EAAgBN,MAAM,CAACU,kBAAvB,CAArD;AAAA,kBACE,KAAC,IAAD;AAAM,UAAA,KAAK,EAAEV,MAAM,CAACW,sBAApB;AAAA;AAAA;AADF,QAnBF;AAAA,MA3BF;AAAA,IADF;AA2DD,CAjID;;AAmIA,eAAevC,WAAf;AAEA,IAAM4B,MAAM,GAAGY,UAAU,CAACC,MAAX,CACb;AACEZ,EAAAA,SAAS,EAAE;AACTa,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAE;AAHH,GADb;AAQEd,EAAAA,cAAc,EAAE;AACde,IAAAA,KAAK,EAAE;AADO,GARlB;AAWEb,EAAAA,KAAK,EAAE;AACLc,IAAAA,eAAe,EAAE,OADZ;AAELC,IAAAA,iBAAiB,EAAE,EAFd;AAGLC,IAAAA,eAAe,EAAE,EAHZ;AAILC,IAAAA,YAAY,EAAE,EAJT;AAKLC,IAAAA,SAAS,EAAE;AALN,GAXT;AAkBEjB,EAAAA,eAAe,EAAE;AACfY,IAAAA,KAAK,EAAE,KADQ;AAEfF,IAAAA,cAAc,EAAE,QAFD;AAGfC,IAAAA,UAAU,EAAE,QAHG;AAIfM,IAAAA,SAAS,EAAE;AAJI,GAlBnB;AAwBEhB,EAAAA,MAAM,EAAE;AACNY,IAAAA,eAAe,EAAE,SADX;AAEND,IAAAA,KAAK,EAAE,MAFD;AAGNM,IAAAA,OAAO,EAAE,EAHH;AAINF,IAAAA,YAAY,EAAE,EAJR;AAKNL,IAAAA,UAAU,EAAE;AALN,GAxBV;AA+BER,EAAAA,aAAa,EAAE;AACbU,IAAAA,eAAe,EAAE,OADJ;AAEbI,IAAAA,SAAS,EAAE,CAFE;AAGbE,IAAAA,WAAW,EAAE,SAHA;AAIbC,IAAAA,WAAW,EAAE;AAJA,GA/BjB;AAqCElB,EAAAA,UAAU,EAAE;AACVmB,IAAAA,KAAK,EAAE,OADG;AAEVC,IAAAA,UAAU,EAAE,KAFF;AAGVC,IAAAA,QAAQ,EAAE;AAHA,GArCd;AA0CEnB,EAAAA,iBAAiB,EAAE;AACjBiB,IAAAA,KAAK,EAAE,SADU;AAEjBC,IAAAA,UAAU,EAAE,KAFK;AAGjBC,IAAAA,QAAQ,EAAE;AAHO,GA1CrB;AA+CEjB,EAAAA,sBAAsB,EAAE;AACtBe,IAAAA,KAAK,EAAE,SADe;AAEtBC,IAAAA,UAAU,EAAE,KAFU;AAGtBC,IAAAA,QAAQ,EAAE;AAHY,GA/C1B;AAoDElB,EAAAA,kBAAkB,EAAE;AAClBQ,IAAAA,eAAe,EAAE,OADC;AAElBI,IAAAA,SAAS,EAAE,CAFO;AAGlBE,IAAAA,WAAW,EAAE,SAHK;AAIlBC,IAAAA,WAAW,EAAE;AAJK;AApDtB,CADa,CAAf","sourcesContent":["// react modules\r\nimport { useNavigation } from '@react-navigation/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { KeyboardAvoidingView, StyleSheet, Text, TextInput, TouchableOpacity, View } from 'react-native'\r\n\r\n\r\n// // DEVICE INFO\r\n// import DeviceInfo from 'react-native-device-info';\r\n// import { getUniqueId, getManufacturer } from 'react-native-device-info';\r\n\r\n\r\n// firebase data base\r\nimport { auth } from \"../firebase\";\r\n\r\n\r\n\r\n\r\nconst LoginScreen = () => {\r\n  // user input states\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n\r\n  // page navigation stack\r\n  const navigation = useNavigation()\r\n\r\n  // on render, check if user is logged in or not\r\n  useEffect(\r\n    () => {\r\n      const unsubscribe = auth.onAuthStateChanged(\r\n        user => {\r\n          if (user) navigation.replace(\"Home\")\r\n        }\r\n      )\r\n      return unsubscribe;\r\n    }, []\r\n  )\r\n\r\n\r\n\r\n  // submit register method()\r\n  const handleSignUp = () => {\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user.email, \"Registered!\")\r\n      })\r\n      .catch(error => { alert(error.message) })\r\n\r\n  }\r\n\r\n  // submit login method()\r\n  const handleLogin = () => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user.email, \"logged in!\")\r\n      })\r\n      .catch(error => { alert(error.message) })\r\n\r\n  }\r\n\r\n  // submit guest login method()\r\n  const handleGuestLogin = () => {\r\n    auth\r\n      .signInAnonymously()\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user?.displayName, \"logged in!\")\r\n      })\r\n      .catch(error => { alert(error.message) })\r\n  }\r\n\r\n  // submit Device login method()\r\n  const handleDeviceLogin = () => {\r\n    let token = \"testing_token\"\r\n    auth\r\n      .signInWithCustomToken(token)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user?.displayName ,  \"logged in!\")\r\n      })\r\n      .catch(error => { alert(error.message) })\r\n  }\r\n\r\n\r\n  return (\r\n    <KeyboardAvoidingView\r\n      style={styles.container}\r\n      behavior=\"padding\"\r\n    >\r\n\r\n      {/* USER INPUT */}\r\n      <View style={styles.inputContainer}>\r\n\r\n        {/* INPUT EMAIL */}\r\n        <TextInput\r\n          placeholder='Email'\r\n          value={email}\r\n          onChangeText={text => { setEmail(text) }}\r\n          style={styles.input}\r\n        />\r\n\r\n        {/* INPUT PASSWORD */}\r\n        <TextInput\r\n          placeholder='Password'\r\n          value={password}\r\n          onChangeText={text => { setPassword(text) }}\r\n          style={styles.input}\r\n          secureTextEntry\r\n        />\r\n      </View>\r\n\r\n      {/* SUBMIT BUTTONS */}\r\n      <View style={styles.buttonContainer}>\r\n\r\n        {/* email login */}\r\n        <TouchableOpacity onPress={handleLogin} style={styles.button}>\r\n          <Text style={styles.buttonText}> Login </Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n        {/* register new account */}\r\n        <TouchableOpacity onPress={handleSignUp} style={[styles.button, styles.buttonOutline]}>\r\n          <Text style={styles.buttonOutlineText}> Register </Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* guest login */}\r\n        <TouchableOpacity onPress={handleGuestLogin} style={[styles.button, styles.GuestbuttonOutline]}>\r\n          <Text style={styles.GuestbuttonOutlineText}> Guest! </Text>\r\n        </TouchableOpacity>\r\n\r\n        {/* guest login */}\r\n        <TouchableOpacity onPress={handleDeviceLogin} style={[styles.button, styles.GuestbuttonOutline]}>\r\n          <Text style={styles.GuestbuttonOutlineText}> Device Login! </Text>\r\n        </TouchableOpacity>\r\n\r\n\r\n\r\n      </View>\r\n\r\n\r\n\r\n    </KeyboardAvoidingView>\r\n  )\r\n}\r\n\r\nexport default LoginScreen\r\n\r\nconst styles = StyleSheet.create(\r\n  {\r\n    container: {\r\n      flex: 1,\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n\r\n    },\r\n\r\n    inputContainer: {\r\n      width: \"80%\"\r\n    },\r\n    input: {\r\n      backgroundColor: \"white\",\r\n      paddingHorizontal: 15,\r\n      paddingVertical: 10,\r\n      borderRadius: 10,\r\n      marginTop: 5\r\n    },\r\n    buttonContainer: {\r\n      width: \"60%\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      marginTop: 40\r\n    },\r\n    button: {\r\n      backgroundColor: \"#0782F9\",\r\n      width: \"100%\",\r\n      padding: 15,\r\n      borderRadius: 10,\r\n      alignItems: \"center\",\r\n    },\r\n    buttonOutline: {\r\n      backgroundColor: \"white\",\r\n      marginTop: 5,\r\n      borderColor: \"#0782F9\",\r\n      borderWidth: 2\r\n    },\r\n    buttonText: {\r\n      color: \"white\",\r\n      fontWeight: \"700\",\r\n      fontSize: 16,\r\n    },\r\n    buttonOutlineText: {\r\n      color: \"#0782F9\",\r\n      fontWeight: \"700\",\r\n      fontSize: 16,\r\n    },\r\n    GuestbuttonOutlineText: {\r\n      color: \"#00FF00\",\r\n      fontWeight: \"700\",\r\n      fontSize: 16,\r\n    },\r\n    GuestbuttonOutline: {\r\n      backgroundColor: \"white\",\r\n      marginTop: 5,\r\n      borderColor: \"#00FF00\",\r\n      borderWidth: 2\r\n    },\r\n\r\n  }\r\n)\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}