{"ast":null,"code":"import StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from \"./screens/LoginScreen\";\nimport HomeScreen from \"./screens/HomeScreen\";\nimport VoteCardScreen from \"./screens/VoteCardScreen\";\nimport { auth } from \"./api_config/firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\n\nfunction App() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Login\",\n        options: {\n          headerShown: false\n        },\n        component: LoginScreen\n      }), _jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: function options(_ref) {\n          var navigation = _ref.navigation;\n          return {\n            headerStyle: {\n              backgroundColor: 'darkslateblue'\n            },\n            headerRight: function headerRight() {\n              return _jsx(Button, {\n                title: \"Sign Out\",\n                color: \"#000000\",\n                onPress: function onPress() {\n                  return auth.signOut().then(function () {\n                    navigation.replace(\"Login\");\n                  }).catch(function (error) {\n                    alert(error.message);\n                  });\n                }\n              });\n            },\n            headerLeft: function headerLeft() {\n              return _jsx(Button, {\n                title: \"STATS\",\n                color: \"#000000\",\n                onPress: function onPress() {\n                  return console.log(\"stats!\");\n                }\n              });\n            }\n          };\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"Vote\",\n        component: VoteCardScreen\n      })]\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default App;","map":{"version":3,"sources":["C:/Users/affan/Desktop/Published/ticVoter/App.js"],"names":["NavigationContainer","createNativeStackNavigator","LoginScreen","HomeScreen","VoteCardScreen","auth","Stack","App","headerShown","navigation","headerStyle","backgroundColor","headerRight","signOut","then","replace","catch","error","alert","message","headerLeft","console","log","styles","StyleSheet","create","container","flex","alignItems","justifyContent"],"mappings":";;;;AAGA,SAASA,mBAAT,QAAoC,0BAApC;AACA,SAASC,0BAAT,QAA2C,gCAA3C;AACA,OAAOC,WAAP;AACA,OAAOC,UAAP;AACA,OAAOC,cAAP;AACA,SAASC,IAAT;;;AAIA,IAAMC,KAAK,GAAGL,0BAA0B,EAAxC;;AAOA,SAASM,GAAT,GAAe;AAGb,SACE,KAAC,mBAAD;AAAA,cAGE,MAAC,KAAD,CAAO,SAAP;AAAA,iBAGE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,OAAnB;AAA2B,QAAA,OAAO,EAAE;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAApC;AAA4D,QAAA,SAAS,EAAEN;AAAvE,QAHF,EAOE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAEC,UAArC;AACE,QAAA,OAAO,EAAE;AAAA,cAAGM,UAAH,QAAGA,UAAH;AAAA,iBAAqB;AAC5BC,YAAAA,WAAW,EAAE;AAAEC,cAAAA,eAAe,EAAE;AAAnB,aADe;AAG5BC,YAAAA,WAAW,EAAE;AAAA,qBACX,KAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,UAAd;AAAyB,gBAAA,KAAK,EAAC,SAA/B;AACE,gBAAA,OAAO,EAAE;AAAA,yBACPP,IAAI,CACDQ,OADH,GAEGC,IAFH,CAEQ,YAAM;AAAEL,oBAAAA,UAAU,CAACM,OAAX,CAAmB,OAAnB;AAA6B,mBAF7C,EAGGC,KAHH,CAGS,UAAAC,KAAK,EAAI;AAAEC,oBAAAA,KAAK,CAACD,KAAK,CAACE,OAAP,CAAL;AAAsB,mBAH1C,CADO;AAAA;AADX,gBADW;AAAA,aAHe;AAa5BC,YAAAA,UAAU,EAAE;AAAA,qBACV,KAAC,MAAD;AAAQ,gBAAA,KAAK,EAAC,OAAd;AAAsB,gBAAA,KAAK,EAAC,SAA5B;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMC,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAN;AAAA;AADX,gBADU;AAAA;AAbgB,WAArB;AAAA;AADX,QAPF,EA+BE,KAAC,KAAD,CAAO,MAAP;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,SAAS,EAAElB;AAArC,QA/BF;AAAA;AAHF,IADF;AA0CD;;AAOD,IAAMmB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;AAC/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,IAAI,EAAE,CADG;AAEThB,IAAAA,eAAe,EAAE,MAFR;AAGTiB,IAAAA,UAAU,EAAE,QAHH;AAITC,IAAAA,cAAc,EAAE;AAJP;AADoB,CAAlB,CAAf;AAQA,eAAetB,GAAf","sourcesContent":["import { StyleSheet, Text, View, Button } from 'react-native';\n\n// react navigator\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport LoginScreen from './screens/LoginScreen';\nimport HomeScreen from './screens/HomeScreen';\nimport VoteCardScreen from './screens/VoteCardScreen';\nimport { auth } from \"./api_config/firebase\";\n\n\n// screen navigation init stack\nconst Stack = createNativeStackNavigator();\n\n\n\n\n\n\nfunction App() {\n\n\n  return (\n    <NavigationContainer>\n\n      {/* creates a stack of screens to navigate through */}\n      <Stack.Navigator>\n\n        {/* LOGIN PAGE */}\n        <Stack.Screen name=\"Login\" options={{ headerShown: false }} component={LoginScreen} />\n\n\n        {/* HOMESCREEN PAGE */}\n        <Stack.Screen name=\"Home\" component={HomeScreen}\n          options={({ navigation }) => ({\n            headerStyle: { backgroundColor: 'darkslateblue' },\n\n            headerRight: () => (\n              <Button title=\"Sign Out\" color=\"#000000\"\n                onPress={() =>\n                  auth\n                    .signOut()\n                    .then(() => { navigation.replace(\"Login\") })\n                    .catch(error => { alert(error.message) })}\n              />\n            ),\n\n            headerLeft: () => (\n              <Button title=\"STATS\" color=\"#000000\"\n                onPress={() => console.log(\"stats!\")} />\n            ),\n\n          })}\n        />\n\n\n        {/* VOTING DETAIL PAGE PAGE */}\n        <Stack.Screen name=\"Vote\" component={VoteCardScreen} />\n\n\n      </Stack.Navigator>\n\n    </NavigationContainer>\n  );\n}\n\n\n\n\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\nexport default App;"]},"metadata":{},"sourceType":"module"}