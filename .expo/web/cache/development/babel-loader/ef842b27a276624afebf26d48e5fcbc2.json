{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useEffect, useState } from 'react';\nimport { auth } from \"../api_config/firebase\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar CONFIG = require(\"../api_config/config.json\");\n\nvar VoteCardScreen = function VoteCardScreen(_ref) {\n  var route = _ref.route;\n  var user_varified = auth.currentUser.emailVerified;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      display_date_ticker = _useState2[0],\n      setDisplay_data_ticker = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      display_date_voteCard = _useState4[0],\n      setDisplay_data_voteCard = _useState4[1];\n\n  var ticker_info = function ticker_info(ticker) {\n    fetch(CONFIG.base_url + \"/api/tickers/\" + ticker).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setDisplay_data_ticker(json);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  var voteCard_info = function voteCard_info(ticker) {\n    fetch(CONFIG.base_url + \"/api/votes/\" + ticker).then(function (response) {\n      return response.json();\n    }).then(function (json) {\n      return setDisplay_data_voteCard(json);\n    }).catch(function (error) {\n      return console.error(error);\n    });\n  };\n\n  var vote = function vote(ticker, opinion) {\n    var response, json;\n    return _regeneratorRuntime.async(function vote$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(CONFIG.base_url + \"/api/votes/\" + ticker + \"/\" + opinion, {\n              method: 'POST',\n              headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json'\n              },\n              body: JSON.stringify({\n                user: auth.currentUser\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 5:\n            json = _context.sent;\n            return _context.abrupt(\"return\", json);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    ticker_info(route.params.data.ticker);\n    voteCard_info(route.params.data.ticker);\n  }, []);\n  console.log(display_date_ticker);\n  console.log(display_date_voteCard);\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsxs(Text, {\n      children: [route.params.data.name, \" | \", route.params.data.ticker]\n    }), _jsxs(Text, {\n      children: [\"ETF: \", route.params.data.is_etf ? \"yes\" : \"no\"]\n    }), _jsx(Text, {\n      children: route.params.data.exchange\n    }), _jsx(Text, {\n      children: display_date_ticker.history\n    }), _jsx(Text, {\n      children: display_date_voteCard.vote_up + display_date_voteCard.vote_down > 0 ? display_date_voteCard.up_vote + \" : \" + display_date_voteCard.down_vote + \" \" : \"Be the first to vote!\"\n    }), _jsxs(View, {\n      style: styles.fixToText,\n      children: [_jsx(Button, {\n        title: user_varified ? ' up! ' : 'Please Validate',\n        onPress: function onPress() {\n          return vote(route.params.data.ticker, 'up');\n        },\n        color: \"#00FF00\",\n        disabled: !user_varified ? true : false\n      }), _jsx(Button, {\n        title: user_varified ? ' down! ' : 'Email',\n        onPress: function onPress() {\n          return vote(route.params.data.ticker, 'down');\n        },\n        color: \"#FF0000\",\n        disabled: !user_varified ? true : false\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  fixToText: {\n    flexDirection: 'row',\n    justifyContent: 'space-between'\n  },\n  upButton: {\n    flex: 1\n  },\n  downButton: {\n    flex: 1\n  }\n});\nexport default VoteCardScreen;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/screens/VoteCardScreen.js"],"names":["React","useEffect","useState","auth","CONFIG","require","VoteCardScreen","route","user_varified","currentUser","emailVerified","display_date_ticker","setDisplay_data_ticker","display_date_voteCard","setDisplay_data_voteCard","ticker_info","ticker","fetch","base_url","then","response","json","catch","error","console","voteCard_info","vote","opinion","method","headers","Accept","body","JSON","stringify","user","params","data","log","styles","container","name","is_etf","exchange","history","vote_up","vote_down","up_vote","down_vote","fixToText","StyleSheet","create","flex","justifyContent","alignItems","flexDirection","upButton","downButton"],"mappings":"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","sourcesContent":["import { StyleSheet, Text, View, Button } from 'react-native'\r\nimport React, { useEffect, useState } from 'react'\r\n\r\n\r\n// config\r\nimport { auth } from \"../api_config/firebase\";\r\nconst CONFIG = require(\"../api_config/config.json\")\r\n\r\n\r\n\r\n\r\n\r\nconst VoteCardScreen = ({ route }) => {\r\n\r\n    const user_varified = auth.currentUser.emailVerified\r\n    // STATES\r\n    const [display_date_ticker, setDisplay_data_ticker] = useState('')\r\n    const [display_date_voteCard, setDisplay_data_voteCard] = useState('')\r\n\r\n\r\n\r\n\r\n    // DISPLAY_INFO FETCH DATA\r\n    const ticker_info = (ticker) => {\r\n        fetch(`${CONFIG.base_url}/api/tickers/${ticker}`)\r\n            .then((response) => response.json())\r\n            .then((json) => setDisplay_data_ticker(json))\r\n            .catch((error) => console.error(error))\r\n    }\r\n\r\n    const voteCard_info = (ticker) => {\r\n        fetch(`${CONFIG.base_url}/api/votes/${ticker}`)\r\n            .then((response) => response.json())\r\n            .then((json) => setDisplay_data_voteCard(json))\r\n            .catch((error) => console.error(error))\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // POST VOTES\r\n    const vote = async (ticker, opinion) => {\r\n        let response = await fetch(`${CONFIG.base_url}/api/votes/${ticker}/${opinion}`, {\r\n            method: 'POST',\r\n            headers: { Accept: 'application/json', 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({ user: auth.currentUser }),\r\n        });\r\n\r\n        let json = await response.json();\r\n        return json;\r\n    }\r\n\r\n\r\n\r\n\r\n    // on render, check if user is logged in or not\r\n    useEffect(\r\n        () => {\r\n            ticker_info(route.params.data.ticker)\r\n            voteCard_info(route.params.data.ticker)\r\n        }, []\r\n    )\r\n\r\n\r\n    console.log(display_date_ticker)\r\n    console.log(display_date_voteCard)\r\n\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n\r\n\r\n\r\n            {/* DISPLAY DATA */}\r\n            <Text>{route.params.data.name} | {route.params.data.ticker}</Text>\r\n            <Text>ETF: {route.params.data.is_etf ? \"yes\" : \"no\"}</Text>\r\n            <Text>{route.params.data.exchange}</Text>\r\n            <Text>{display_date_ticker.history}</Text>\r\n            <Text>\r\n                {\r\n                    display_date_voteCard.vote_up + display_date_voteCard.vote_down > 0 ? \r\n                    `${display_date_voteCard.up_vote} : ${display_date_voteCard.down_vote} `\r\n                    : \"Be the first to vote!\"\r\n                }\r\n            </Text>\r\n\r\n\r\n\r\n\r\n\r\n            <View style={styles.fixToText}>\r\n\r\n                {/* up */}\r\n                <Button\r\n                    title={user_varified ? ' up! ' : 'Please Validate'}\r\n                    onPress={() => vote(route.params.data.ticker, 'up')}\r\n                    color=\"#00FF00\"\r\n                    disabled={!user_varified ? true : false}\r\n                />\r\n\r\n                {/* down */}\r\n                <Button\r\n                    title={user_varified ? ' down! ' : 'Email'}\r\n                    onPress={() => vote(route.params.data.ticker, 'down')}\r\n                    color=\"#FF0000\"\r\n                    disabled={!user_varified ? true : false}\r\n                />\r\n\r\n            </View>\r\n\r\n\r\n\r\n\r\n        </View>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create(\r\n    {\r\n        container: {\r\n            flex: 1,\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n        },\r\n        fixToText: {\r\n            flexDirection: 'row',\r\n            justifyContent: 'space-between',\r\n        },\r\n        upButton: {\r\n            flex: 1\r\n        },\r\n        downButton: {\r\n            flex: 1\r\n        },\r\n\r\n    }\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default VoteCardScreen\r\n"]},"metadata":{},"sourceType":"module"}