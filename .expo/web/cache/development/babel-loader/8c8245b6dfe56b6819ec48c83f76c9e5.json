{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar CONFIG = require(\"../api_config/config.json\");\n\nvar _useState = useState(new Date().toLocaleString()),\n    _useState2 = _slicedToArray(_useState, 2),\n    timeRN = _useState2[0],\n    setTimeRN = _useState2[1];\n\nvar _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    experation_date = _useState4[0],\n    setExperationDate = _useState4[1];\n\nvar fetchDate = function fetchDate() {\n  fetch(CONFIG.base_url + \"/api/vote_experation_date\").then(function (response) {\n    return response.json();\n  }).then(function (json) {\n    return setExperationDate(json);\n  }).catch(function (error) {\n    return console.error(error);\n  });\n};\n\nexport { fetchDate };","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/api_config/httpRequests.js"],"names":["CONFIG","require","useState","Date","toLocaleString","timeRN","setTimeRN","experation_date","setExperationDate","fetchDate","fetch","base_url","then","response","json","catch","error","console"],"mappings":";;AAAA,IAAMA,MAAM,GAAGC,OAAO,6BAAtB;;AAKA,gBAA4BC,QAAQ,CAAC,IAAIC,IAAJ,GAAWC,cAAX,EAAD,CAApC;AAAA;AAAA,IAAOC,MAAP;AAAA,IAAeC,SAAf;;AACA,iBAA6CJ,QAAQ,CAAC,EAAD,CAArD;AAAA;AAAA,IAAOK,eAAP;AAAA,IAAwBC,iBAAxB;;AAKA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACpBC,EAAAA,KAAK,CAAIV,MAAM,CAACW,QAAX,+BAAL,CACKC,IADL,CACU,UAACC,QAAD;AAAA,WAAcA,QAAQ,CAACC,IAAT,EAAd;AAAA,GADV,EAEKF,IAFL,CAEU,UAACE,IAAD;AAAA,WAAUN,iBAAiB,CAACM,IAAD,CAA3B;AAAA,GAFV,EAGKC,KAHL,CAGW,UAACC,KAAD;AAAA,WAAWC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAAX;AAAA,GAHX;AAIH,CALD;;AAQA,SAAQP,SAAR","sourcesContent":["const CONFIG = require(\"../api_config/config.json\")\r\n\r\n\r\n\r\n// build api that gives expiration dates and saves voter data\r\nconst [timeRN, setTimeRN] = useState(new Date().toLocaleString())\r\nconst [experation_date, setExperationDate] = useState('')\r\n\r\n\r\n\r\n\r\nconst fetchDate = () => {\r\n    fetch(`${CONFIG.base_url}/api/vote_experation_date`)\r\n        .then((response) => response.json())\r\n        .then((json) => setExperationDate(json))\r\n        .catch((error) => console.error(error))\r\n}\r\n\r\n\r\nexport {fetchDate}"]},"metadata":{},"sourceType":"module"}