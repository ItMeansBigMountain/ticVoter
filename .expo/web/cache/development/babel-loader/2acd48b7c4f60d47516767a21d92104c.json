{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nvar arr = fetch('https://dumbstockapi.com/stock?exchanges=NYSE').then(function (arr) {\n  console.log(typeof arr);\n  return arr.jsond;\n});\nvar lastItem = '';\nexport var fetch_rendered_data = function fetch_rendered_data(qty) {\n  return new Promise(function (resolve, reject) {\n    var newArr;\n    var lastItemIndex = arr.indexOf(lastItem);\n    if (lastItemIndex === arr.length - 1) return resolve('done');\n\n    if (!lastItem) {\n      newArr = _toConsumableArray(arr).slice(0, qty);\n      lastItem = _toConsumableArray(newArr).pop();\n    } else {\n      var newIndex = arr.indexOf(lastItem) + 1;\n      newArr = _toConsumableArray(arr).slice(newIndex, qty + newIndex);\n      lastItem = _toConsumableArray(newArr).pop();\n    }\n\n    setTimeout(function () {\n      resolve(newArr);\n    }, 1000);\n  });\n};","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/DataServer.js"],"names":["arr","fetch","then","console","log","jsond","lastItem","fetch_rendered_data","qty","Promise","resolve","reject","newArr","lastItemIndex","indexOf","length","slice","pop","newIndex","setTimeout"],"mappings":";AAAA,IAAIA,GAAG,GAAGC,KAAK,CAAC,+CAAD,CAAL,CACTC,IADS,CAER,UAACF,GAAD,EAAS;AAACG,EAAAA,OAAO,CAACC,GAAR,CAAa,OAAOJ,GAApB;AAA0B,SAAOA,GAAG,CAACK,KAAX;AAAkB,CAF9C,CAAV;AAOA,IAAIC,QAAQ,GAAG,EAAf;AAKA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAAC,GAAG;AAAA,SACpC,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/B,QAAIC,MAAJ;AACA,QAAMC,aAAa,GAAGb,GAAG,CAACc,OAAJ,CAAYR,QAAZ,CAAtB;AACA,QAAIO,aAAa,KAAKb,GAAG,CAACe,MAAJ,GAAa,CAAnC,EAAsC,OAAOL,OAAO,CAAC,MAAD,CAAd;;AAEtC,QAAI,CAACJ,QAAL,EAAe;AACbM,MAAAA,MAAM,GAAG,mBAAIZ,GAAJ,EAASgB,KAAT,CAAe,CAAf,EAAkBR,GAAlB,CAAT;AACAF,MAAAA,QAAQ,GAAG,mBAAIM,MAAJ,EAAYK,GAAZ,EAAX;AACD,KAHD,MAGO;AACL,UAAMC,QAAQ,GAAGlB,GAAG,CAACc,OAAJ,CAAYR,QAAZ,IAAwB,CAAzC;AACAM,MAAAA,MAAM,GAAG,mBAAIZ,GAAJ,EAASgB,KAAT,CAAeE,QAAf,EAAyBV,GAAG,GAAGU,QAA/B,CAAT;AACAZ,MAAAA,QAAQ,GAAG,mBAAIM,MAAJ,EAAYK,GAAZ,EAAX;AACD;;AACDE,IAAAA,UAAU,CAAC,YAAM;AACfT,MAAAA,OAAO,CAACE,MAAD,CAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD,GAhBD,CADoC;AAAA,CAA/B","sourcesContent":["let arr = fetch('https://dumbstockapi.com/stock?exchanges=NYSE')\r\n.then(\r\n  (arr) => {console.log( typeof arr );return arr.jsond }\r\n)\r\n\r\n\r\n\r\nlet lastItem = '';\r\n\r\n\r\n\r\n\r\nexport const fetch_rendered_data = qty =>\r\n  new Promise((resolve, reject) => {\r\n    let newArr;\r\n    const lastItemIndex = arr.indexOf(lastItem);\r\n    if (lastItemIndex === arr.length - 1) return resolve('done');\r\n\r\n    if (!lastItem) {\r\n      newArr = [...arr].slice(0, qty);\r\n      lastItem = [...newArr].pop();\r\n    } else {\r\n      const newIndex = arr.indexOf(lastItem) + 1;\r\n      newArr = [...arr].slice(newIndex, qty + newIndex);\r\n      lastItem = [...newArr].pop();\r\n    }\r\n    setTimeout(() => {\r\n      resolve(newArr);\r\n    }, 1000);\r\n  });"]},"metadata":{},"sourceType":"module"}