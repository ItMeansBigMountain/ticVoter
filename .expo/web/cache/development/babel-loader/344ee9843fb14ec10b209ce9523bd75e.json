{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { fetch_rendered_data } from \"../DataServer\";\nimport { useNavigation } from '@react-navigation/core';\nimport { Server_object } from \"../DataServer.js\";\nimport SearchBarComponent from \"../components/SearchBarComponent\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar stopFetchMore = true;\n\nvar _ListFooterComponent = function ListFooterComponent() {\n  return _jsx(Text, {\n    style: {\n      fontSize: 16,\n      fontWeight: 'bold',\n      textAlign: 'center',\n      padding: 5\n    },\n    children: \"Loading...\"\n  });\n};\n\nvar ScrollLoad = function ScrollLoad() {\n  var navigation = useNavigation();\n  var quantity_rendered = 20;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      render_index = _useState4[0],\n      set_render_index = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      loadingMore = _useState6[0],\n      setLoadingMore = _useState6[1];\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            updateData();\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, []);\n\n  var renderItem = function renderItem(_ref) {\n    var item = _ref.item;\n    return _jsx(TouchableOpacity, {\n      onPress: function onPress() {\n        navigation.navigate(\"Vote\", {\n          data: item\n        });\n      },\n      style: styles.stock_button,\n      activeOpacity: 0.25,\n      children: _jsxs(Text, {\n        title: styles.stock_button_text,\n        children: [item.ticker, \"  : \", item.name]\n      })\n    });\n  };\n\n  var updateData = function updateData() {\n    var response;\n    return _regeneratorRuntime.async(function updateData$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            set_render_index(render_index + quantity_rendered);\n            _context2.next = 3;\n            return _regeneratorRuntime.awrap(fetch_rendered_data(quantity_rendered, render_index));\n\n          case 3:\n            response = _context2.sent;\n            if (response) setData(_toConsumableArray(response));else setData([\"error\", \"DataServer.js\", \"didnt return the promise\"]);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleOnEndReached = function handleOnEndReached() {\n    var response;\n    return _regeneratorRuntime.async(function handleOnEndReached$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            setLoadingMore(true);\n\n            if (stopFetchMore) {\n              _context3.next = 10;\n              break;\n            }\n\n            _context3.next = 4;\n            return _regeneratorRuntime.awrap(fetch_rendered_data(quantity_rendered, render_index));\n\n          case 4:\n            response = _context3.sent;\n\n            if (!(response === 'done')) {\n              _context3.next = 7;\n              break;\n            }\n\n            return _context3.abrupt(\"return\", setLoadingMore(false));\n\n          case 7:\n            stopFetchMore = true;\n            setData([].concat(_toConsumableArray(data), _toConsumableArray(response)));\n            set_render_index(render_index + quantity_rendered);\n\n          case 10:\n            setLoadingMore(false);\n\n          case 11:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return _jsxs(View, {\n    children: [_jsx(SearchBarComponent, {}), _jsx(FlatList, {\n      data: data,\n      keyExtractor: function keyExtractor(item) {\n        return data.indexOf(item);\n      },\n      renderItem: renderItem,\n      onEndReached: handleOnEndReached,\n      onEndReachedThreshold: 0.01,\n      onScrollBeginDrag: function onScrollBeginDrag() {\n        stopFetchMore = false;\n      },\n      ListFooterComponent: function ListFooterComponent() {\n        return loadingMore && _jsx(_ListFooterComponent, {});\n      }\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  stock_button: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 15,\n    borderBottomColor: '#009688',\n    borderBottomWidth: 2\n  },\n  stock_button_text: {\n    textAlign: 'center',\n    fontWeight: 'bold',\n    fontSize: 20,\n    padding: 15,\n    borderBottomColor: '#009688',\n    borderBottomWidth: 2\n  },\n  itemStyle: {\n    padding: 10\n  },\n  textInputStyle: {\n    height: 50,\n    width: \"100%\",\n    borderWidth: 1,\n    paddingLeft: 20,\n    margin: 50,\n    borderColor: '#009688',\n    backgroundColor: '#FFFFFF'\n  },\n  search_bar_container: {\n    backgroundColor: '#000000',\n    alignItems: 'center',\n    justifyContent: 'center',\n    marginTop: 25,\n    height: 55\n  }\n});\nexport default ScrollLoad;","map":{"version":3,"sources":["C:/Users/affan/Desktop/JavaScript/REACT/projects/ticVoter/components/ScrollLoad.js"],"names":["React","useEffect","useState","fetch_rendered_data","useNavigation","Server_object","SearchBarComponent","stopFetchMore","ListFooterComponent","fontSize","fontWeight","textAlign","padding","ScrollLoad","navigation","quantity_rendered","data","setData","render_index","set_render_index","loadingMore","setLoadingMore","updateData","renderItem","item","navigate","styles","stock_button","stock_button_text","ticker","name","response","handleOnEndReached","indexOf","StyleSheet","create","borderBottomColor","borderBottomWidth","itemStyle","textInputStyle","height","width","borderWidth","paddingLeft","margin","borderColor","backgroundColor","search_bar_container","alignItems","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { FlatList, StyleSheet, Text, View, TouchableOpacity, TextInput } from 'react-native';\r\nimport { fetch_rendered_data } from '../DataServer';\r\nimport { useNavigation } from '@react-navigation/core';\r\n\r\nimport { Server_object } from '../DataServer.js';\r\nimport SearchBarComponent from '../components/SearchBarComponent';\r\n\r\n\r\n// check to halt load requests\r\nlet stopFetchMore = true;\r\n\r\n\r\n\r\n// LOADING VIEW\r\nconst ListFooterComponent = () => (\r\n    <Text\r\n        style={{\r\n            fontSize: 16,\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',\r\n            padding: 5,\r\n        }}\r\n    >\r\n        Loading...\r\n    </Text>\r\n);\r\n\r\n\r\n\r\n\r\n// MAIN COMPONENT\r\nconst ScrollLoad = () => {\r\n\r\n    const navigation = useNavigation()\r\n\r\n    const quantity_rendered = 20;\r\n    const [data, setData] = useState([]);\r\n    const [render_index, set_render_index] = useState(0);\r\n    const [loadingMore, setLoadingMore] = useState(false);\r\n\r\n    \r\n\r\n    // HOOK : on page render\r\n    useEffect(async () => {\r\n        updateData()\r\n    }, []);\r\n\r\n\r\n    \r\n\r\n    // DATA ARRAY ITEM VIEW\r\n    const renderItem = ({ item }) => {\r\n        return (\r\n            <TouchableOpacity\r\n                onPress={() => {\r\n                    navigation.navigate(\"Vote\", { data: item })\r\n                }}\r\n                style={styles.stock_button}\r\n                activeOpacity={0.25}\r\n            >\r\n                <Text title={styles.stock_button_text} >\r\n                    {item.ticker}  : {item.name}\r\n                </Text>\r\n            </TouchableOpacity>\r\n        );\r\n    };\r\n\r\n\r\n    // UPDATE STATE OF DISPLAY DATA VIA SCROLL\r\n    const updateData = async () => {\r\n        set_render_index(render_index + quantity_rendered)\r\n        // gets data from server.js\r\n        const response = await fetch_rendered_data(quantity_rendered, render_index)\r\n        // check if we got data from DataServer.js\r\n        if (response) setData([...response]);\r\n        else setData([\"error\", \"DataServer.js\", \"didnt return the promise\"])\r\n    };\r\n\r\n\r\n\r\n    // load more unless server resolves done\r\n    const handleOnEndReached = async () => {\r\n        setLoadingMore(true);\r\n        if (!stopFetchMore) {\r\n            const response = await fetch_rendered_data(quantity_rendered, render_index); //fetch\r\n            if (response === 'done') return setLoadingMore(false);\r\n            stopFetchMore = true;\r\n            setData([...data, ...response]); // append to [state list]\r\n            set_render_index(render_index + quantity_rendered) // add 20 to last index\r\n        }\r\n        setLoadingMore(false);\r\n    };\r\n\r\n\r\n    \r\n    return (\r\n        <View>\r\n\r\n\r\n\r\n            {/* SEARCH */}\r\n            <SearchBarComponent/>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n            {/* DISPLAY */}\r\n            <FlatList\r\n                data={data}\r\n                keyExtractor={item => data.indexOf(item)}\r\n                renderItem={renderItem}\r\n                onEndReached={handleOnEndReached}\r\n                onEndReachedThreshold={0.01}\r\n                onScrollBeginDrag={() => {\r\n                    stopFetchMore = false;\r\n                }}\r\n                ListFooterComponent={() => loadingMore && <ListFooterComponent />}\r\n            // onScroll={(event) => console.log(event)}\r\n            />\r\n\r\n\r\n\r\n\r\n        </View>\r\n\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst styles = StyleSheet.create({\r\n\r\n    stock_button: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        padding: 15,\r\n        borderBottomColor: '#009688',\r\n        borderBottomWidth: 2,\r\n    },\r\n    stock_button_text: {\r\n        textAlign: 'center',\r\n        fontWeight: 'bold',\r\n        fontSize: 20,\r\n        padding: 15,\r\n        borderBottomColor: '#009688',\r\n        borderBottomWidth: 2,\r\n    },\r\n\r\n    itemStyle: {\r\n        padding: 10,\r\n    },\r\n    textInputStyle: {\r\n        height: 50,\r\n        width: \"100%\",\r\n        borderWidth: 1,\r\n        paddingLeft: 20,\r\n        margin: 50,\r\n        borderColor: '#009688',\r\n        backgroundColor: '#FFFFFF',\r\n    },\r\n    search_bar_container: {\r\n        backgroundColor: '#000000',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        marginTop: 25,\r\n        height: 55,\r\n    },\r\n\r\n\r\n});\r\n\r\n\r\n\r\n\r\nexport default ScrollLoad"]},"metadata":{},"sourceType":"module"}